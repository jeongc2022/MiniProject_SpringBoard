<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Modularization - JavaBank</title>
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta name="Keywords" content="java,java modules,Javabank,JavaBank Modularization" /><meta name="Description" content="JavaBank Modularization" />
<link rel="stylesheet" href="/static/css/english.css" type="text/css" />
<link rel="stylesheet" href="/static/css/screen.css" type="text/css" />
<link rel="stylesheet" href="/static/css/print.css" type="text/css" />
<link rel="stylesheet" href="/static/css/prettify.css" type="text/css" />
<script src="/static/js/jquery-3.2.1.min.js"></script>
<script src="/static/js/commons.js"></script>
<script src="/static/js/prettify.js"></script><script src="/static/js/javaschool-prettify.js"></script>
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<script>
  (adsbygoogle = window.adsbygoogle || []).push({
    google_ad_client: "ca-pub-1447532017929181",
    enable_page_level_ads: true
  });
</script>
</head>
<body>
	<div id="wrap">
	
		<div id="header">
			<div id="java-school-ci">
				<a href="/"><img src="/static/images/ci.gif" alt="java-school" /></a>
			</div>
			
			<div id="mobile-menu-converter">
				<a href="#" style="float: right;" class="forward">Forward ▶</a>
				<a href="#" style="float: right;" class="back">◀ Back</a>
			</div>
			
			<div id="mobile-menu">
				<a href="#">&nbsp;</a>
			</div>
			
			<div id="searchcontainer">
				<script>
				  (function() {
				    var cx = 'partner-pub-1447532017929181:4708204227';
				    var gcse = document.createElement('script');
				    gcse.type = 'text/javascript';
				    gcse.async = true;
				    gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;
				    var s = document.getElementsByTagName('script')[0];
				    s.parentNode.insertBefore(gcse, s);
				  })();
				</script>
				<gcse:searchbox-only></gcse:searchbox-only>
			</div>
		</div>
		
		<div id="main-menu" lang="en">
			<ul id="nav">
			    <li><a href="/java/JDK-Install">Java</a></li>
			    <li><a href="/jdbc/JDBC-Intro">JDBC</a></li>
			    <li><a href="/jsp/How-to-install-Tomcat">JSP</a></li>
			    <li><a href="/css-layout/div-element-arrangement">CSS Layout</a></li>
			    <li><a href="/jsp-pjt/Dynamic-Web-Project-Set-Up">JSP Project</a></li>
			    <li><a href="/spring/building-java-projects-with-maven">Spring</a></li>
			    <li><a href="/javascript/introduction">JavaScript</a></li>
			    <li><a href="/google-app-engine/building-gae-projects-with-maven">Google Cloud</a></li>
			    <li><a href="/blog">Blog</a></li>
			</ul>		
		</div>

		<div id="i18n" style="height: 23px;">
		</div>
		
		<div id="container">		
			<div id="content">
				<!-- AddThis Button BEGIN -->
				<div class="addthis_toolbox addthis_default_style addthis_javaschool">
				<a class="addthis_button_facebook"></a>
				<a class="addthis_button_twitter"></a>
				<a class="addthis_button_email"></a>
				<a class="addthis_button_print"></a>
				</div>
				<script type="text/javascript">
				var addthis_share = {templates: { twitter: '{{title}} {{lurl}} @gmcfc23' }};</script>
				<script type="text/javascript" src="http://s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4da99cad3fd96d4e"></script>
				<!-- AddThis Button END -->
				<article>
<div class="last-modified">Last Modified 2020.4.10</div>

<h1>Modularization - JavaBank</h1>

<p>
This article covers modularization of the <a href="/jdbc/JavaBank">JDBC Example JavaBank</a>.<br /> 
Download the JavaBank source with the following command.
</p>

<pre class="shell-prompt">
git clone https://github.com/kimjonghoon/JavaBank
</pre>

<p>
Download the Oracle JDBC Driver 
from <a href="https://www.oracle.com/database/technologies/jdbcdriver-ucp-downloads.html#license-lightbox">https://www.oracle.com/database/technologies/jdbcdriver-ucp-downloads.html#license-lightbox</a>.<br /> 
Download the latest slf4j-api and slf4j-simple from <a href="http://www.slf4j.org/download.html">http://www.slf4j.org/download.html</a>.<br />
Copy ojdbc6.jar, slf4j-api-1.7.30.jar and slf4j-simple-1.7.30.jar to lib/ directory.
</p>

<pre lang="en">
src/
├── net
│   └── java_school
│       └── bank
│            ├── Account.java
│            ├── Bank.java
│            ├── BankDao.java
│            ├── BankUi.java
│            ├── MyBank.java
│            ├── MyBankDao.java
│            └── Transaction.java
├── simplelogger.properties
lib/
├── ojdbc6.jar
├── slf4j-api-1.7.30.jar
└── slf4j-simple-1.7.30.jar
</pre>

<p>
Connect to the SCOTT account with SQL*PLUS and create the following tables
and a trigger that inserts transaction history data in the transaction table whenever your account balance changes.
</p>

<pre class="prettyprint">
create table bankaccount (
	accountno varchar2(50),
	owner varchar2(20) not null,
	balance number,
	kind varchar2(10),
	constraint PK_BANKACCOUNT primary key(accountno),
	constraint CK_BANKACCOUNT_NORMAL 
		CHECK (balance &gt;= CASE WHEN kind='NORMAL' THEN 0 END),
	constraint CK_BANKACCOUNT_KIND CHECK (kind in ('NORMAL', 'MINUS'))
);  

create table transaction (
    transactiondate timestamp,
    kind varchar2(10),
    amount number,
    balance number,
    accountno varchar2(50),
    constraint FK_TRANSACTION FOREIGN KEY(accountno)
    	REFERENCES bankaccount(accountno)
);

create or replace trigger bank_trigger
after insert or update of balance on bankaccount
for each row
begin
	if :new.balance &gt; :old.balance then
		insert into transaction 
		values 
		(
			systimestamp,
			'DEPOSIT',
			:new.balance - :old.balance,
			:new.balance,
			:old.accountno
		);
	end if;
	if :new.balance &lt; :old.balance then
		insert into transaction 
		values 
		(
			systimestamp,
			'WITHDRAW',
			:old.balance - :new.balance,
			:new.balance,
			:old.accountno
		);
	end if;
end;
/
</pre>

<p>
Before modularization, check if the program works.
</p>

<h4>Test on Windows</h4>

<p>
Compile
</p>

<strong class="screen-header"><b>C:\</b> Command Prompt</strong>
<pre class="screen">mkdir out
set classpath=lib\slf4j-api-1.7.30.jar
javac -d out src\net\java_school\bank\*.java
</pre>

<p>
Copy properties to out/ directory.
</p>

<strong class="screen-header"><b>C:\</b> Command Prompt</strong>
<pre class="screen">copy src\simplelogger.properties out\
</pre>

<p>
Run
</p>

<strong class="screen-header"><b>C:\</b> Command Prompt</strong>
<pre class="screen">set classpath=lib\slf4j-api-1.7.30.jar;lib\slf4j-simple-1.7.30.jar;lib\ojdbc6.jar;out
java net.java_school.bank.BankUi
</pre>

<h4>Test on Linux</h4>

<p>
Compile
</p>

<pre class="shell-prompt">
CP=lib/slf4j-api-1.7.30.jar
javac -cp $CP -d out -sourcepath src $(find src -name "*.java")
</pre>

<p>
Copy properties to out/ directory.
</p>

<pre class="shell-prompt">
cp src/simplelogger.properties out/
</pre>

<p>
Run
</p>

<pre class="shell-prompt">
CP+=:lib/slf4j-simple-1.7.30.jar
CP+=:lib/ojdbc6.jar
java -cp $CP:out net.java_school.bank.BankUi
</pre>

<p>
Before modularization, run the following to check the external library that JavaBank depends on.
</p>

<pre class="shell-prompt">
jdeps -summary -cp lib/*.jar out
</pre>

<pre class="shell-prompt">
..
<b>out -> lib/slf4j-api-1.7.30.jar</b>
..
</pre>

<p>
We found that JavaBank depends on slf4j-api-1.7.30.jar.<br />
Remember that a library like this should be in the module path.<br />
Jars that are not modules in the module path become automatic modules.<br />
</p>

<h3>Modularization</h3>

<p>
Download the custom connection pool modules.
</p>

<pre class="shell-prompt">
git clone https://github.com/kimjonghoon/java-module-test
</pre>

<p>
Place the JavaBank sources in the src/ folder of java-module-test as follows.
--Remove the main.app module and net.java_school.db.dbpool.mysql in java-module-test--
</p>

<pre lang="en">
src/
├── net.java_school.javabank
│   ├── net
│   │   └── java_school
│   │       └── bank
│   │            ├── Account.java
│   │            ├── Bank.java
│   │            ├── BankDao.java
│   │            ├── BankUi.java
│   │            ├── MyBank.java
│   │            ├── MyBankDao.java
│   │            └── Transaction.java
│   ├── module-info.java
│   └── simplelogger.properties
├── net.java_school.db.dbpool.api
│   ├── net
│   │   └── java_school
│   │       └── db
│   │           └── dbpool
│   │               └── api
│   │                   └── ConnectionManageable.java
│   └── module-info.java
├── net.java_school.db.dbpool
│   ├── net
│   │   └── java_school
│   │       └── db
│   │           └── dbpool
│   │               ├── DBConnectionPool.java
│   │               ├── DBConnectionPoolManager.java
│   │               └── ConnectionManager.java
│   └── module-info.java
├── net.java_school.db.dbpool.oracle
│   ├── net
│   │   └── java_school
│   │       └── db
│   │           └── dbpool
│   │               └── oracle
│   │                   └── OracleConnectionManager.java
│   ├── module-info.java
│   └── oracle.properties
lib/
├── slf4j-simple-1.7.30.jar
jars/
├── ojdbc6.jar
└── slf4j-api-1.7.30.jar
</pre>

<p>
Add jars/ to the module path.<br />
Non-module jars in the module path become automatic modules.<br />
Add lib/ to the classpath.<br />
Non-module jars in the classpath become unnamed modules.<br />
Only automatic modules can read unnamed modules.<br />
You can easily infer that slf4j-api will read slf4j-simple from their name.
</p>

<p>
Create the module-info.java of the net.java_school.javabank module as follows.
</p>

<pre class="prettyprint">
module net.java_school.javabank {
  requires net.java_school.db.dbpool.api;
  
  uses net.java_school.db.dbpool.api.ConnectionManageable;
}
</pre>

<p>
Compile to see how the names of the automatic modules are determined.
</p>

<p>Compile on Windows</p>

<strong class="screen-header"><b>C:\</b> Command Prompt</strong>
<pre class="screen">javac -p jars -d out --module-source-path src ^
-m net.java_school.javabank,net.java_school.db.dbpool.api,
net.java_school.db.dbpool,net.java_school.db.dbpool.oracle
</pre>

<p>Compile on Linux</p>

<pre class="shell-prompt">
javac -p jars -d out --module-source-path src $(find src -name "*.java")
</pre>

<p>
Compile error occurs.
</p>

<pre class="shell-prompt">
src/net.java_school.javabank/net/java_school/bank/MyBankDao.java:12: error: package org.slf4j is not visible
import org.slf4j.Logger;
          ^
  (package org.slf4j is declared in module org.slf4j, but module net.java_school.javabank does not read it)
src/net.java_school.javabank/net/java_school/bank/MyBankBankDao.java:13: error: package org.slf4j is not visible
import org.slf4j.LoggerFactory;
          ^
  (package org.slf4j is declared in module org.slf4j, but module net.java_school.javabank does not read it)
2 errors
</pre>

<p>
(package org.slf4j is declared in module <b>org.slf4j</b>, but module net.java_school.javabank does not read it)<br />
The module name can be found in the above error message.<br />
Edit the module-info.java in net.java_school.javabank module as follows.
</p>

<pre class="prettyprint">
module net.java_school.javabank {
  requires net.java_school.db.dbpool.api;
  <b>requires org.slf4j;</b>
  
  uses net.java_school.db.dbpool.api.ConnectionManageable;
}
</pre>

<h4>Test on Windows</h4>

<p>
Compile
</p>

<strong class="screen-header"><b>C:\</b> Command Prompt</strong>
<pre class="screen">javac -p jars -d out --module-source-path src ^
-m net.java_school.javabank,net.java_school.db.dbpool.api,
net.java_school.db.dbpool,net.java_school.db.dbpool.oracle
</pre>

<p>
Copy properties to the module directory.
</p>

<strong class="screen-header"><b>C:\</b> Command Prompt</strong>
<pre class="screen">copy src\net.java_school.db.dbpool.oracle\oracle.properties ^
out\net.java_school.db.dbpool.oracle\
copy src\net.java_school.javabank\simplelogger.properties ^
out\net.java_school.javabank\
</pre>

<p>
Run
</p>

<strong class="screen-header"><b>C:\</b> Command Prompt</strong>
<pre class="screen">set classpath=lib\slf4j-simple-1.7.30.jar
java -p jars;out ^ 
-m net.java_school.javabank/net.java_school.bank.BankUi
</pre>

<h4>Test on Linux</h4>

<p>
Compile
</p>

<pre class="shell-prompt">
javac -p jars -d out --module-source-path src $(find src -name "*.java")
</pre>

<p>
Copy properties to the module directory.
</p>

<pre class="shell-prompt">
cp src/net.java_school.db.dbpool.oracle/oracle.properties \
out/net.java_school.db.dbpool.oracle/
cp src/net.java_school.javabank/simplelogger.properties \
out/net.java_school.javabank/
</pre>

<p>
Run
</p>

<pre class="shell-prompt">
CP=lib/slf4j-simple-1.7.30.jar
java -cp $CP -p jars:out \
-m net.java_school.javabank/net.java_school.bank.BankUi
</pre>

<span id="related-articles">Related Articles</span>
<ul id="related-articles-ul">
	<li><a href="/jdbc/JavaBank">JavaBank</a></li>
	<li><a href="/blog/2019/java-9-modules">Java 9 Modules</a></li>
	<li><a href="/blog/2020/java-modules-javabank">Modularization - JavaBank</a></li>
</ul>

<span id="refer">References</span>
<ul id="references">
	<li><a href="https://www.oracle.com/database/technologies/jdbcdriver-ucp-downloads.html#license-lightbox">Oracle JDBC Driver Download</a></li>
	<li><a href="http://www.slf4j.org/download.html">http://www.slf4j.org/download.html</a></li>
</ul>

</article>
				
			</div>
		</div>	
		
		<div id="sidebar" lang="en">
<h1>Home</h1>
<ul>
    <li class="sub-heading">Book Source</li>
    <li><a href="https://github.com/kimjonghoon/JavaWebProgramming">Java Web Programming</a></li>
    <li><a href="https://github.com/kimjonghoon/GoogleCloudJavaProgrammingV2">Google App Engine</a></li>
</ul>
<a href="https://play.google.com/store/books/details?id=vlqKBgAAQBAJ"><img alt="Java Web Programming" src="/static/images/JavaWebPrograming.png" style="display: block;width: 100%;margin: 10px 0;"></a>
<a href="https://play.google.com/store/books/details?id=HOe4DAAAQBAJ"><img alt="Google Cloud Java Programming" src="/static/images/GAEJavaProgramming.jpg" style="display: block;width: 100%;margin: 10px 0;"></a>
</div>
		
		<div id="extra">
			<!-- <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> -->
			<ins class="adsbygoogle"
			     style="display:inline-block;width:160px;height:600px"
			     data-ad-client="ca-pub-1447532017929181"
			     data-ad-slot="5530886067"></ins>
			<script>
			(adsbygoogle = window.adsbygoogle || []).push({});
			</script>
		</div>
				
		<div id="footer" lang="en">
			<ul>
				<li>Copyright java-school All Rights Reserved.</li>
			</ul>
			<!-- 
			<ul id="footer-ad">
				<li>
					<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
					<ins class="adsbygoogle"
					     style="display:inline-block;width:970px;height:250px"
					     data-ad-client="ca-pub-1447532017929181"
					     data-ad-slot="3048417260"></ins>
					<script>
					(adsbygoogle = window.adsbygoogle || []).push({});
					</script>
				</li>
			</ul>
			-->
		</div>

	</div>
	
</body>
</html>
